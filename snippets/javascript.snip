#GENERIC

snippet cb
alias cb, call, callback
abbr callback_function
options word
  function(${1:arguments}) {
    ${2:code...}
  }

snippet fn
alias fn, function, fun
abbr var = function...
options word
  var ${1:name} = function(${2:arguments}) {
    ${3:code...}
  };

snippet :fn
alias :fn, :function, :fun
abbr var = function...
options word
  ${1:name}: function(${2:arguments}) {
    ${3:code...}
  }${4:,}

snippet var
abbr var = 'some value'
options word
  var ${1:name} = ${2:value}

snippet =
abbr something = 'some value'
options word
  ${1:name} = ${2:value}

snippet req
alias req, require
abbr    require('...');
options word
  require('${1:path}');

snippet log
abbr    console.log
options word
  console.log(${1:to_log});

#JASMINE
snippet desc
abbr    jasmine describe()
options word
	describe('${1:description}', function(){
		${2:code...}
	});

snippet bf
alias bf, before
abbr    jasmine beforeEach()
options word
	beforeEach(function(){
		${1:code...}
	});

snippet it
abbr    jasmine it()
options word
	it('should ${1:....}', function(){
		${2:code...}
	});

snippet exp
abbr    jasmine expect()
options word
  expect(${1:prove}).${2:toBe}(${3:expectation});

snippet spy
abbr    jasmine spyOn()
options word
  spyOn(${1:object}, ${2:property});
